version: "3.9"

services:
  mautic_web:
    image: mautic/mautic:5-apache
    container_name: mautic-web
    restart: unless-stopped
    environment:
      - MAUTIC_DB_HOST=db
      - MAUTIC_DB_USER=${MYSQL_USER}
      - MAUTIC_DB_PASSWORD=${MYSQL_PASSWORD}
      - MAUTIC_DB_NAME=${MYSQL_DATABASE}
      - MAUTIC_RUN_CRON_JOBS=false
    volumes:
      - ./mautic/config:/var/www/html/app/config:z
      - ./mautic/media:/var/www/html/media:z
      - ./mautic/logs:/var/www/html/var/logs:z
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mautic.rule=Host(`${MAUTIC_DOMAIN}`)"
      - "traefik.http.routers.mautic.entrypoints=websecure"
      - "traefik.http.routers.mautic.tls.certresolver=myresolver"
    networks:
      - mautic
      - traefik

  db:
    image: mariadb:10.6
    container_name: mautic-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mautic

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - traefik

volumes:
  db_data:

networks:
  mautic:
  traefik:
